// Configure Auto Relocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

// We use this to replace version in plugin.yml
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group = 'me.magnum.specials'
version = '1.2.0'
description = 'Create and give special items to players'
archivesBaseName = 'Specials' // Put your artifactId here
mainClassName = 'me.magnum.specials.Specials'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" } // Spigot Repo
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" } // Sonatype snapshots
    maven { url 'https://jitpack.io' }
}
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

dependencies {
//    shadow 'junit:junit:3.8.2' 
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compileOnly 'me.arcaniax:HeadDatabase:4.6.3'
    implementation 'me.magnum.lib:CommonLibrary:1.0.2-SNAPSHOT'
    shadow 'fr.minuskube.inv:smart-invs:1.2.6'
    implementation 'co.aikar:acf-paper:0.5.0-SNAPSHOT'
}

// Minimizing an shadow JAR
shadowJar {
    minimize()
}

/* This will replace '@VERSION@' in the plugin.yml with the version declared above, just put '@VERSION@' for the version in the plugin.yml Example plugin.yml: 

name: @NAME@
main: @MAIN@
version: @VERSION@
authors: [Magnum1997]
description: Make and give items special to your server.

*/

processResources {
    filter ReplaceTokens, tokens: [
            "VERSION": version,
            "NAME"   : archivesBaseName,
            "MAIN"   : mainClassName,
    ]
}
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
//    prefix = "sha" // Default value is "shadow"

}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

build.dependsOn shadowJar

compileJava.options.encoding = 'UTF-8' // Encode your source code with UTF-8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
