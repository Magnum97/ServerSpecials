// Configure Auto Relocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'java'
    id 'application'
    id 'io.freefair.lombok' version '5.3.0'
    id 'kr.entree.spigradle' version '2.2.3'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group = 'com.reallemc'
version = '1.2.1'
description = 'Create and give special items to players'
archivesBaseName = 'Specials' // Put your artifactId here
mainClassName = 'me.magnum.specials.Specials'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal() {
        content {
            includeGroup 'com.reallemc'
        }
    }
    mavenCentral()
    jcenter()
    maven { url "https://repo.aikar.co/content/groups/aikar/" }
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" } // Spigot Repo
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" } // Sonatype snapshots
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://jitpack.io' }
}
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

dependencies {
//    shadow 'junit:junit:3.8.2' 
//    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
//    compileOnly paper()
//    implementation 'co.aikar:acf-paper:0.5.0-SNAPSHOT'
    compileOnly 'com.github.Arcaniax-Development:HeadDatabase-API:faa767a090'
//    compileOnly 'com.reallemc:Core:0.0.1'
    shadow 'fr.minuskube.inv:smart-invs:1.2.6'
//    implementation 'com.github.kangarko:Foundation:5.8.1'
}
spigot {

}
// Minimizing an shadow JAR
shadowJar {
    minimize()
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "com.realle" // Default value is "shadow"

}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

build.dependsOn shadowJar

compileJava {
    options.encoding = 'UTF-8' // Encode your source code with UTF-8
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
